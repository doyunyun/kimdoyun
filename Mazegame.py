from ursina import * #ursina
from ursina.prefabs.first_person_controller import FirstPersonController


app=Ursina()

__ = False


class Player(FirstPersonController):
    def __init__(self):
        super().__init__(
            speed = 10,  
            jump_height=10,
            model = 'cube',
            collider = 'mesh',
            scale = 1
        )

class Warp(Entity):
    def __init__(self, i, j):
        super().__init__(
            warp = Entity(
                model = 'cube',
                scale = (5,20,5),
                position = (i * 5, 0, j * 5),
                collider = 'box',
                texture = r"medieval_red_brick_4k.blend\textures\medieval_red_brick_diff_4k.jpg"

            )
        )
        self.a = player
        
        def updata(self):
            self.abcd()

        def abcd(self):
            if self.warp.intersects(a):
                self.a.position = (95, 3, 95)


    
class Exit(Entity):
    def __init__(self,i,j):
        super().__init__(
            model = 'cube',
            scale = (5, 5, 5),
            color = color.black90,
            position = (i*5, 0, j*5),
            collider = 'mesh'
        )
        self.player = player
        self.text = Text(
            text = '!!COMPLETE!!',
            scale = 10,
            origin = (0,0),
            visible = False,
            color = color.gold
            

        )
    def update(self):
        self.clear()
    def clear(self):
        dis = (self.player.position - self.position).length()
        print(dis)
        if dis < 3:
            self.player.enabled = False
            self.text.visible = True


def input(key):
    if key == 'escape':
        app.quit()

player = Player()
#EditorCamera()
        



MAP = [
    [11,'p',13,14,13,16,17,18,19,20,22,22,11,22,23,24,25,26,27,28,29,30,31,33,33,22,33,22,33,12,25,'e',25,21,25,25,12,23,66,29],
    [11,__,13,__,__,__,__,__,19,20,__,22,__,22,23,__,25,__,__,__,29,__,__,__,33,22,__,__,__,__,25,__,__,__,__,__,__,__,__,29],
    [11,__,13,__,13,16,17,__,__,__,__,__,__,__,__,__,25,__,27,__,29,__,31,__,__,22,__,22,33,__,25,33,25,12,25,25,12,23,__,29],
    [11,__,13,__,__,__,17,__,19,20,22,22,__,22,23,24,25,__,27,28,29,__,31,__,33,22,__,22,33,__,25,__,25,__,__,__,__,23,__,29],
    [11,'w',13,14,13,__,17,__,__,__,22,22,__,__,__,24,__,__,27,__,29,__,31,__,__,__,__,__,33,__,25,__,25,__,25,25,__,23,__,29],
    [11,__,13,__,__,__,17,__,19,__,22,__,__,22,__,24,__,26,__,__,29,__,31,33,33,__,__,__,33,__,25,__,25,__,25,25,__,23,__,29], 
    [11,__,13,__,13,16,17,__,__,__,22,__,22,22,__,24,__,26,__,28,29,__,31,__,33,22,33,22,33,__,25,__,__,__,25,__,__,23,__,29],
    [11,__,13,__,__,__,17,__,19,20,__,__,22,22,__,24,__,26,__,28,29,__,31,__,33,22,33,__,__,__,25,25,25,21,25,__,12,23,__,29],
    [11,__,__,__,__,__,17,__,19,20,__,22,22,__,23,24,__,26,__,__,29,__,31,__,__,__,__,__,33,12,25,__,__,__,25,__,12,23,__,29],
    [11,__,13,14,13,16,17,__,19,20,__,__,__,__,23,24,__,26,__,28,29,__,31,33,__,22,33,__,33,__,25,__,25,__,25,__,12,23,__,29],
    [11,__,13,14,__,__,__,__,19,20,22,22,22,22,__,__,__,26,__,28,29,__,31,__,__,22,__,22,33,12,25,__,25,__,25,__,__,__,__,29],
    [11,__,13,14,13,16,17,__,19,20,__,__,__,22,__,24,25,__,__,__,__,__,31,__,33,__,__,__,__,__,25,__,25,__,__,25,__,23,__,29],
    [11,__,13,__,__,16,17,__,19,20,__,22,__,22,__,24,__,26,__,28,__,30,__,__,33,__,33,22,33,__,25,__,__,21,__,25,__,23,__,29],
    [11,__,13,14,__,16,17,__,__,__,__,22,__,22,__,__,__,__,__,28,__,30,__,33,33,__,33,22,33,__,__,25,__,21,__,25,__,23,__,29],
    [11,__,13,14,__,16,17,18,19,20,__,22,__,22,23,24,__,26,__,28,__,30,31,33,__,__,33,__,__,12,__,25,__,21,__,25,__,23,__,29],
    [11,__,__,__,__,__,__,__,__,__,__,__,__,__,__,__,__,__,__,__,__,__,__,33,__,__,33,__,33,12,__,25,__,21,__,25,__,23,__,29],
    [11,__,13,14,__,16,17,18,19,20,22,22,22,__,23,24,25,26,__,28,29,30,__,__,33,__,__,__,__,12,__,25,__,21,__,25,__,23,__,29],
    [11,__,13,14,__,16,17,__,__,__,__,22,22,__,23,24,__,26,__,28,29,30,31,__,33,22,__,22,__,12,__,25,__,21,__,25,__,23,__,29],
    [11,__,13,14,__,__,__,__,19,20,__,22,22,__,__,24,__,26,__,__,__,__,__,__,__,22,__,__,__,12,__,__,__,21,__,__,__,__,__,29],
    [11,__,13,14,13,16,17,18,19,20,22,22,22,22,__,24,25,26,27,28,29,__,31,33,33,22,33,22,33,12,25,25,25,21,25,25,12,23,__,29],
    [11,__,__,__,__,__,__,__,__,__,__,__,__,__,__,__,__,__,__,__,__,__,__,__,__,__,__,__,__,__,__,__,__,__,__,__,__,__,__,29],
    [11,12,13,14,13,16,17,18,19,20,22,22,22,22,23,24,25,26,27,28,29,30,31,33,33,22,33,22,33,12,25,25,25,21,25,25,12,23,66,29]
]

for i in range(len(MAP)):
    for j in range(len(MAP[i])):
        if MAP[i][j]:
            if MAP[i][j] == 'p':
                player.position = (i * 5, 0, j * 5)
                continue

            if MAP[i][j] == 'e':
                exitdoor = Exit(i,j)
                continue

            if MAP[i][j] == 'w':
                warp = Warp(i, j)
                continue

            wall = Entity(
                model = 'cube',
                #color = color.white,
                scale = (5,20,5),
                position = (i * 5, 0, j * 5),
                collider = 'box',
                texture = r"medieval_red_brick_4k.blend\textures\medieval_red_brick_diff_4k.jpg"
                )
        

Barrel = Entity(
    model = 'model/Barrel_01_4k.fbx',
    texture = 'images/barrel.jpg',
    scale = 0.1,
    rotation = (0,90,0),
    collider = 'mesh'

)

ground = Entity(
    model = 'plane',
    color = color.gray,
    position = (0, 0, 0),
    scale = (400, 1, 400),
    collider = 'mesh',
    texture = r"wood_floor_4k.blend\textures\wood_floor_diff_4k.jpg"
)
  
app.run()
